---
######################################################################################################################################################################################################################################################################################
# Listing All Regions
###################################################################################################################################################################################################################################################################################### 
#- name: Ensure required tags are present on snapshots
 # environment:
  #  PATH: "/usr/local/bin:/usr/local/sbin"
  #command: aws ec2 describe-regions --query "Regions[].{"'RegionName:'"RegionName}" --output text
  #register: region_names

#- debug: msg="{{region_names.stdout_lines}}"

#- debug:
 #   msg: "{{ item }}"
  #with_items: "{{ region_names.stdout_lines }}"

######################################################################################################################################################################################################################################################################################
# FINDING UNTAGGED SNAPSHOTS , "'OwnerId:'"OwnerId, "'StartTime:'"StartTime
###################################################################################################################################################################################################################################################################################### 
- name: Ensure required tags are present on snapshots
  environment:
    PATH: "/usr/local/bin:/usr/local/sbin"
  shell: aws ec2 describe-snapshots --region "{{ region }}" --owner-ids self --query "Snapshots[?!not_null(Tags[?Key == 'Expiry'].Value) && !not_null(Tags[?Key == 'Email'].Value)].{"'SnapshotId:'"SnapshotId, "'OwnerId:'"OwnerId, "'StartTime:'"StartTime}" --output text | "sed -e 's/"^\\t"/,/g'"
  register: ensured_snapshot_details
  #with_items: "{{ region_names.stdout_lines }}"

- debug: msg="{{ ensured_snapshot_details.stdout_lines }}"
#{{ region_names.stdout_lines }}"

#- debug:
   # msg: "{{ item }}"
  #with_items: "{{ ensured_snapshot_details.stdout_lines }}"

#- name: Create a file to store the Untagged Snapshot Report
 # copy:
  #  dest: "/home/ansible/AWSUntaggedSnapshotReport{{ '%Y-%m-%d %H:%M:%S' | strftime(ansible_date_time.epoch) }}.csv"
   # content: "{{ item }}"
    #owner: ansible
    #group: ansible
    #mode: '0644'
  #with_items: "{{ ensured_snapshot_details.stdout_lines | join(', ') }}"
  #register: raw_report

#- debug:
    #msg: "{{ result.stdout_lines }}"  
 #   msg: "{{ raw_report['results'][0]['dest'] }}"

######################################################################################################################################################################################################################################################################################
# Transposing the RawReport Using Pandas
######################################################################################################################################################################################################################################################################################
#- name: Transpose the Raw Report to generate Human Redable file
  #script: files/transpose.py "{{ item }}"
  #with_items: "{{ raw_report['results'][0]['dest'] }}"

 

######################################################################################################################################################################################################################################################################################
# SENDING THE EMAIL
######################################################################################################################################################################################################################################################################################

#- name: Send Email for the report based on the conditions check for ses task
 # script: files/ses1.py {{ sender_identity }} {{ reciever_identity }} {{ region }} "{{ item }}"
  #with_items: "{{ raw_report['results'][0]['dest'] }}"